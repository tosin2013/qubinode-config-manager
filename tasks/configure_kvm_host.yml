- name: Checking for nvme0n1 Device 
  set_fact:
    nvmedevice_name: "{{ item.key }}"
  no_log: False
  with_dict: "{{ ansible_devices }}"
  when: "item.value.host.startswith('Non-Volatile memory controller')"


- name: show only device name
  debug: var=nvmedevice_name
  when: kvm_host_libvirt_extra_disk | length == 0

- name: Checking for SATA Device 
  set_fact:
    device_name: "{{ item.key }}"
  no_log: False
  with_dict: "{{ ansible_devices }}"
  when: "item.value.host.startswith('SATA')"

- name: show all values for selected device name
  debug: var=ansible_devices[device_name]
  when: kvm_host_libvirt_extra_disk | length == 0

- name: show only device name
  debug: var=device_name
  when: kvm_host_libvirt_extra_disk | length == 0

- name: updating kvm_host_libvirt_extra_disk variable for server with single disk
  set_fact:
     libvirt_dev: "{{ device_name }}"
     kvm_host_libvirt_extra_disk: ""
     create_lvm: no
  when: nvmedevice_name | length == 0  

- name: updating kvm_host_libvirt_extra_disk variable for server with nvme0n1
  set_fact:
     libvirt_dev: "{{ nvmedevice_name }}"
     kvm_host_libvirt_extra_disk: ""
     create_lvm: no
  when: nvmedevice_name | length != 0  

- name: Refresh inventory to ensure new instances exist in inventory
  meta: refresh_inventory
  when: kvm_host_libvirt_extra_disk | length == 0

- name: Copying over kvm_host this will be used to for the kvm variables
  template:
    src: templates/kvm_host.yml.j2
    dest:  /{{ inventory_dir }}/kvm_host.yml
    owner: admin
    group: admin
    mode: 0666
