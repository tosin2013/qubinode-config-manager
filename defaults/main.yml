---
# defaults file for qubinode-config-manager
# Qubinode yaml config flags 
collect_generic_info: false
configure_secerts: false 
configure_kvm_host: false 
configure_idm_info: false 
configure_rhel_vm_info: false
configure_generic_vm_info: false 

# set storage device to dedicate to /var/lib/libvirt/images
kvm_host_libvirt_extra_disk: ""
libvirt_dev: ""

# Qubinode Project Information
instance_prefix: qbn
product: ocp4
admin_user: admin
inventory_dir: "/home/{{ admin_user }}/qubinode-installer/inventory"
env_dir: "/home/{{ admin_user }}/qubinode-installer/env"
vm_inventory_dir: "/home/{{ admin_user }}/qubinode-installer/project/host_vars"
project_dir: "/home/{{ admin_user }}/qubinode-installer/"
# Qubinode ssh user password secert
admin_user_password: ""

# Red Hat Subscription Information 
rhsm_org: ""
rhsm_activationkey: ""
rhsm_username: username
rhsm_password: ""
rhsm_reg_method: "Username and Password" # set "Activation Key" to use activation key

# RHEL qcow images 
qcow_rhel_name: rhel-server-7.8-x86_64-kvm.qcow2 # for rhel 8 qcow rhel-8.2-x86_64-kvm.qcow2
os_qcow_image_name: "{{ qcow_rhel_name }}"

# DNS information 
dns_forwarder: 1.1.1.1
domain: "example.lab"
vm_domain: "example.lab"
public_domain: "example.lab"

###################
# IDM DNS Server  #
##################
idm_admin_user: admin
deploy_idm_server: yes
ask_use_existing_idm: yes
idm_server_name: dns01
idm_hostname: "{{ instance_prefix }}-{{ idm_server_name }}"
idm_zone_overlap: false
idm_admin_pwd: ""
idm_realm: "{{ domain | upper }}"
discovered_ip: "{{ ansible_default_ipv4.address|default(ansible_all_ipv4_addresses[0]) }}"
kvm_host_ip_mask: "{{ host_netmask|default(ansible_default_ipv4.netmask) }}"
kvm_host_mask_prefix: "{{ netmask_prefix|default(kvm_host_ip_mask | ipaddr('prefix')) }}"


idm_user_generated_prefix: "student"

# Default user attributes
idm_user_pass_expiration: 20290119235959
idm_user_state: present
idm_user_shell: "/usr/bin/bash"
update_idm_user_pass: on_create
idm_group_type_posix: no

#Cluster information
cluster_name: qbn


######################
## Libvirt Storage
##
## Set to no if you don't want to configure libvirt storage
create_libvirt_storage: yes
## Where to store libvirt VMs disk images
libvirt_images_dir: /var/lib/libvirt/images
## Libvirt pool name
libvirt_pool_name: default

## create libvirt bridge network
configure_bridge: "{{ configure_bridge }}"
## name for libvirt bridge network
libvirt_bridge_name: qubinet

create_lvm: true 

## name for the system bridge ethernet interface
qubinode_bridge_device: qubibr0

# Network interface name 
network_interface_name:  "{{ ansible_default_ipv4.interface }}"
mtu: 1500 

# Ansible Tower Secerts 
tower_pg_password: ""
tower_rabbitmq_password: ""

# VM Options 
vm_teardown: false # defaulting to false 
cloud_init_vm_image: "{{ qcow_rhel_name }}"

# Default VM network 
vm_libvirt_net: "{{ vm_libvirt_net }}"

# RHEL SERVER Defaults
rhel_server_vm:
  rhel_enable: true
  rhel_extra_storage:
  - enable: false
    size: ''
  rhel_group: rhel
  rhel_memory: 800
  rhel_name: 'rhelbox-1'
  rhel_recreate: false
  rhel_root_disk_size: 20G
  rhel_teardown: false
  rhel_vcpu: 1

# GENERIC VM Defaults
generic_server_vm:
  generic_enable: true
  generic_extra_storage:
  - enable: false
    size: ''
  generic_group: generic
  generic_memory: 800
  generic_name: 'genericbox-1'
  generic_recreate: false
  generic_root_disk_size: 20G
  generic_teardown: false
  generic_vcpu: 1

# Expand os vm disk 
expand_os_disk: no